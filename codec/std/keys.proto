syntax = "proto3";
package cosmos_sdk.codec.std.v1;

import "third_party/proto/gogoproto/gogo.proto";

option go_package = "github.com/cosmos/cosmos-sdk/codec/std";

// PubKey defines the application-level PubKey type.
message PublicKey {
  // TODO: uncomment once tendermint has made the key types slices instead of arrays
  // option (cosmos_proto.interface_type) = "*github.com/tendermint/tendermint/crypto.PubKey";
  // sum defines a set of all acceptable concrete PubKey implementations.
  oneof sum {
    bytes                   ed25519   = 1;
    bytes                   secp256k1 = 2;
    bytes                   sr25519   = 3;
    PubKeyMultisigThreshold multisig  = 4;
  }
}

// PrivKey defines the application-level PrivKey type.
message PrivateKey {
  // TODO: uncomment once tendermint has made the key types slices instead of arrays
  // option (cosmos_proto.interface_type) = "*github.com/tendermint/tendermint/crypto.PrivKey";

  // sum defines a set of all acceptable concrete PrivKey implementations.
  oneof sum {
    bytes ed25519   = 1;
    bytes secp256k1 = 2;
    bytes sr25519   = 3;
  }
}

// PubKeyMultisigThreshold implements a K of N threshold multisig.
message PubKeyMultisigThreshold {
  uint32 threshold = 1 [(gogoproto.customname) = "K", (gogoproto.moretags) = "yaml:\"threshold\""];
  repeated PublicKey pubkeys = 2
      [(gogoproto.customname) = "PubKeys", (gogoproto.moretags) = "yaml:\"pubkeys\""];
}
