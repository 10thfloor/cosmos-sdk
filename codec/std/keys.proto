syntax = "proto3";
package cosmos_sdk.codec.std.v1;

import "third_party/proto/gogoproto/gogo.proto";

option go_package = "github.com/cosmos/cosmos-sdk/codec/std";

// PubKey defines the application-level PubKey type.
message PublicKey {
  // TODO: uncomment once tendermint has made the key types slices instead of arrays
  // option (cosmos_proto.interface_type) = "*github.com/tendermint/tendermint/crypto.PubKey";
  // sum defines a set of all acceptable concrete PubKey implementations.
  oneof sum {
    bytes                   ed25519   = 1;
    bytes                   secp256k1 = 2;
    bytes                   sr25519   = 3;
    PubKeyMultisigThreshold multisig  = 4;
  }
}

// PrivKey defines the application-level PrivKey type.
message PrivateKey {
  // TODO: uncomment once tendermint has made the key types slices instead of arrays
  // option (cosmos_proto.interface_type) = "*github.com/tendermint/tendermint/crypto.PrivKey";

  // sum defines a set of all acceptable concrete PrivKey implementations.
  oneof sum {
    bytes ed25519   = 1;
    bytes secp256k1 = 2;
    bytes sr25519   = 3;
  }
}

// PubKeyMultisigThreshold implements a K of N threshold multisig.
message PubKeyMultisigThreshold {
  uint32 threshold = 1 [(gogoproto.customname) = "K", (gogoproto.moretags) = "yaml:\"threshold\""];
  repeated PublicKey pubkeys = 2
      [(gogoproto.customname) = "PubKeys", (gogoproto.moretags) = "yaml:\"pubkeys\""];
}

// CompactBitArray is an implementation of a space efficient bit array.
// This is used to ensure that the encoded data takes up a minimal amount of
// space after proto encoding.
// This is not thread safe, and is not intended for concurrent usage.
message CompactBitArray {
  option (gogoproto.marshaler)   = false;
  option (gogoproto.unmarshaler) = false;
  option (gogoproto.sizer)       = false;
  option (gogoproto.stringer)    = false;

  bytes extra_bits = 1
      [(gogoproto.customname) = "ExtraBitsStored", (gogoproto.moretags) = "yaml:\"extra_bits\""];
  bytes bits = 2 [(gogoproto.customname) = "Elems", (gogoproto.moretags) = "yaml:\"bits\""];
}

// Multisignature is used to represent the signature object used in the multisigs.
// Sigs is a list of signatures, sorted by corresponding index.message PrivKeyEd25519 {
message Multisignature {
  option (gogoproto.goproto_stringer) = true;
  CompactBitArray bitarray            = 1 [(gogoproto.customname) = "BitArray"];
  repeated bytes  sigs                = 2;
}
